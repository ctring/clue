{
  "name": "splinter",
  "displayName": "Clue",
  "description": "",
  "publisher": "ctring",
  "version": "0.0.6",
  "engines": {
    "vscode": "^1.77.0"
  },
  "categories": [
    "Other"
  ],
  "activationEvents": [],
  "main": "./out/extension.js",
  "contributes": {
    "configuration": {
      "title": "Clue",
      "properties": {
        "splinter.tsconfigRootDir": {
          "type": "string",
          "default": "./",
          "definitions": "Directory to find tsconfig"
        },
        "splinter.includeFiles": {
          "type": "string",
          "default": "**/*.ts",
          "definitions": "Glob pattern of files to include in the analysis"
        },
        "splinter.excludeFiles": {
          "type": "string",
          "default": "{**/node_modules/**,**/migrations/**}",
          "definitions": "Glob pattern of files to exclude from the analysis"
        },
        "splinter.analyzeBatchSize": {
          "type": "number",
          "default": 25,
          "definitions": "Number of files to analyze in a batch"
        }
      }
    },
    "viewsContainers": {
      "activitybar": [
        {
          "id": "splinter",
          "title": "Clue",
          "icon": "media/splinter-activitybar.svg"
        }
      ]
    },
    "views": {
      "splinter": [
        {
          "id": "info",
          "name": "Info"
        },
        {
          "id": "recognized",
          "name": "Recognized"
        },
        {
          "id": "unknown",
          "name": "Unknown"
        }
      ]
    },
    "menus": {
      "view/item/context": [
        {
          "command": "splinter.item.addNote",
          "when": "view == recognized || view == unknown",
          "group": "inline"
        },
        {
          "command": "splinter.item.clearNote",
          "when": "(view == recognized || view == unknown) && viewItem =~ /hasNote/",
          "group": "inline"
        },
        {
          "command": "splinter.item.addNote",
          "when": "view == recognized || view == unknown",
          "group": "1_note@1"
        },
        {
          "command": "splinter.item.clearNote",
          "when": "(view == recognized || view == unknown) && viewItem =~ /hasNote/",
          "group": "1_note@2"
        },
        {
          "command": "splinter.entity.moveToUnknown",
          "when": "view == recognized && viewItem =~ /entity/",
          "group": "2_edit@1"
        },
        {
          "command": "splinter.entity.moveToRecognized",
          "when": "view == unknown && viewItem =~ /entity/",
          "group": "2_edit@1"
        },
        {
          "command": "splinter.operation.add",
          "when": "view == recognized && viewItem =~ /entity/",
          "group": "2_edit@2"
        },
        {
          "command": "splinter.argument.add",
          "when": "view == recognized && viewItem =~ /operation/",
          "group": "2_edit@1"
        },
        {
          "command": "splinter.item.remove",
          "when": "view == recognized && viewItem =~ /custom/",
          "group": "2_edit@2"
        },
        {
          "command": "splinter.item.copy",
          "when": "view == recognized || view == unknown",
          "group": "3_copy@1"
        },
        {
          "command": "splinter.info.copy",
          "when": "view == info",
          "group": "3_copy@1"
        }
      ],
      "view/title": [
        {
          "command": "splinter.entity.add",
          "when": "view == recognized",
          "group": "navigation"
        }
      ]
    },
    "commands": [
      {
        "command": "splinter.item.show",
        "title": "Show Item"
      },
      {
        "command": "splinter.item.copy",
        "title": "Copy"
      },
      {
        "command": "splinter.info.copy",
        "title": "Copy"
      },
      {
        "command": "splinter.item.addNote",
        "title": "Add Note",
        "icon": "$(note)"
      },
      {
        "command": "splinter.item.clearNote",
        "title": "Clear Note",
        "icon": "$(clear-all)"
      },
      {
        "command": "splinter.entity.add",
        "title": "New Entity",
        "category": "Clue",
        "icon": "$(add)"
      },
      {
        "command": "splinter.entity.moveToUnknown",
        "title": "Move to Unknown"
      },
      {
        "command": "splinter.entity.moveToRecognized",
        "title": "Move to Recognized"
      },
      {
        "command": "splinter.operation.add",
        "title": "Add Operation"
      },
      {
        "command": "splinter.argument.add",
        "title": "Add Argument"
      },
      {
        "command": "splinter.item.remove",
        "title": "Remove"
      },
      {
        "command": "splinter.reanalyze",
        "title": "Re-analyze",
        "category": "Clue",
        "icon": "$(sync)"
      }
    ]
  },
  "scripts": {
    "vscode:prepublish": "npm run compile",
    "compile": "tsc -p ./",
    "watch": "tsc -watch -p ./",
    "pretest": "npm run compile && npm run lint",
    "lint": "eslint src --ext ts",
    "test": "node ./out/test/runTest.js"
  },
  "devDependencies": {
    "@types/eslint": "^8.37.0",
    "@types/glob": "^8.1.0",
    "@types/mocha": "^10.0.1",
    "@types/node": "16.x",
    "@types/pluralize": "^0.0.29",
    "@types/vscode": "^1.77.0",
    "@vscode/test-electron": "^2.3.0",
    "glob": "^8.1.0",
    "mocha": "^10.2.0",
    "typescript": "^4.9.5"
  },
  "dependencies": {
    "@typescript-eslint/eslint-plugin": "^5.56.0",
    "@typescript-eslint/parser": "^5.56.0",
    "clipboardy": "^3.0.0",
    "eslint": "^8.36.0",
    "eslint-plugin-typeorm-analyzer": "^1.0.8",
    "pluralize": "^8.0.0"
  },
  "extensionDependencies": [
    "vscode.git"
  ]
}